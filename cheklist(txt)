Шаблоны чек-листов									
									
"В этом документе собраны основные подходы к использованию чек-листов. Чек-листы сделаны на примере блокнота (Notepad). Первые три чек-листа являются разными подходами и выступают в роли ВЗАИМОИСКЛЮЧАЮЩИХ. №4 и №5 являются отдельными ДОПОЛНИТЕЛЬНЫМИ инструментами, которые могут использоваться как опция к любому типу чек-листов, в том числе и совместно.

Для перехода между чек-листами используйте переключения между листами или ссылки в таблице ниже."									
1	Структуризатор	- Используется для структуризации информации о статусе продукта, подходит командам опытных тестировщиков.							
2	Незабыватор	- Используется "чтобы ничего не забыть проверить", сфера применения сильно зависит от уровня детализации							
3	Тесткейсозаменитель -	Используется как альтернатива тест-кейсам в случаях, когда требования к качеству достаточно высокие, а ресурсов на создание тест-кейсов нет							
4	Статусопоказатель	 -Используется для оценки динамики качества ПО, анализа причин появления дефектов и/или пропусков дефектов							
5	Окруженияучитыватель -Используется для оценки состояния ПО на разных окружениях				


1. Чек-лист "Структуризатор"											
"В этом варианте просто выписываем основные операции, производимые продуктом. Для удобства, группируем их (плюсики/минусики слева раскрывают строки).

В столбце ""результат"" указывается либо результат, либо текстовые комментарии, либо ссылки на найденные дефекты.

Результат такого чек-листа:
+ малое время создания (пример - 3 минуты)
+ структуризация информации. ГРАМОТНЫЙ тестировщик произведёт все наиболее важные проверки, а информацию по найденным дефектам занесёт в чек-лист. В результате, статус продукта будет более наглядным и более структурным
+ при регулярном проведении нюансы реализации тестов могут меняться, таким образом будет расширяться покрытие
- нет гарантий, что проверено всё, что нужно, т.к. в чек-листе слишком общие слова, и проверки могут быть некорректными (дефекты известны, а что именно проверено - нет)
- не подходит для использования новичком в команде (нет информации ""как тестировать"")
- не оптимизирован набор (неопытный тестировщик для покрытия обобщённого чек-листа потратит в несколько раз больше времени, чем если предварительно оптимизировать набор при помощи техник тест-дизайна)
- не указаны факторы, влияющие на проведение тестов, в результате многое может быть забыто.

Вывод: удобно для использования в гибких условиях И в команде с опытными тестерами-джедаями И в небольшом проекте для структуризации информации о статусе продукта."											
			
      
      Проверка	    Результат	       Комментарии
Операции с файлами      ok	
Создание файла        	ok	
Открытие файла	        ok	
Сохранение документа    ok	
Печать	                ok	
Редактирование файлов	bugs	
Отмена	                ok	
Копирование	        ok	
Вырезание	        ok	
Вставка	                ok	
Удаление	        ok	
Поиск	                fail	        bug #123
Поиск с заменой	        fail	        bug #126
Вставка даты	        ok	
Форматирование	        ok	
Перенос строки	        ok	
Изменение шрифта        ok	
Справка               	ok	


2. Чек-лист "Незабыватор"											
"Этот чек-лист основан на предыдущем, но глубже по уровню детализации. Его основная задача - перечислить все необходимые проверки, чтобы они не были забыты. Для удобства организуется в виде структуры с неограниченным уровнем вложенности. Для удобства стилями можно выделять негативные и позитивные проверки, статусы, приоритеты и т.д. Лёгкая визуализация результата - залог эффективности использования.

Приведённый ниже чек-лист лишь пример и не претендует на полноту тестирования блокнота, для примера заполнено только ""Создание файла"".

Результат такого чек-листа:
+ не большое время создания (пример - 7 минут)
+ структуризация информации
+ больше информации о статусе (точнее видно в чём проблемы)
+ гарантия проверки основных влияющих параметров, опций, функционала (достаточность перечисленных в чек-листе проверок может быть предварительно согласована)
- не подходит для использования новичком в команде (нет информации ""как тестировать"")
- не оптимизирован набор (высокий риск потратить слишком много времени)

Вывод: удобно для использования в опытной команде при остутствии времени на продуманный тест-дизайн. Подходит как для структуризации информации, так и для обеспечения того, чтобы ключевые тесты не будут пропущены."

     Проверка	         Результат	        Комментарии
Операции с файлами	     bugs	
Создание файла	             bugs	
Разные типы файлов	     ok	
doc                          ok	
rtf	                     ok	
txt	                     ok	
Размеры файлов	             ok	
пустой	                     ok	
~ 1 кб	                     ok	
~ 10 мб                      ok	
Носитель	             bugs	
локально	             ok	
сетевой диск	             fail	            bug #129
Название файла	             ok	
Разная длина	             ok	
Разные символы в названии    ok	
Разные кодировки	     ok	
Кодировка файла	             ok	
ANSI	                     ok	
Unicode	                     ok	
UTF-8	                     ok	
Доп. проверки	             ok	
Создание уже существующего   ok	
Нет прав записи в папку	     ok	
Запись файла на CD-R	     ok	
Открытие файла	             ok	
Сохранение документа	     ok	
Печать	                     ok	
Редактирование файлов	   bugs	
Отмена	                     ok	
Копирование	             ok	
Вырезание   	             ok	
Вставка	                     ok	
Удаление	             ok	
Поиск	                    fail	             bug #123
Поиск с заменой	            fail	             bug #126
Вставка даты	             ok	
Форматирование	             ok	
Перенос строки	             ok	
Изменение шрифта	     ok	
Справка	                     ok	


3. Чек-лист "Тесткейсозаменитель"											
"В этом варианте вместо общих данных (ЧТО должно быть проверено) указывается конкретный набор параметров. Таким образом, этот чек-лист может быть не просто результатом перечисления каких-либо факторов, но результатом продуманного тест-анализа

Заполнены примеры только для ""Создание файла"".

Результат такого чек-листа:
+ существенная оптимизация затрат на прохождение при грамотном тест-дизайне
+ гарантированный уровень покрытия (известно, ЧТО ИМЕННО будет проверяться)
+ может использоваться неопытными сотрудниками
+ в создании и поддержке занимает меньше времени, чем тест-кейсы
+ можно оговорить значения ""по умолчанию"", чтобы не указывать все каждый раз, но тем не менее точно знать что проверялось
+ последовательности выполнения можно определить с учётом приоритетов, таким образом, чтобы в первую очередь проверялись наиболее критичные проверки
- затраты на создание выше ""маленьких"" чек-листов
- ""эффект пестицида"" (покрываются тестами одни и те же участки функционала, в то время как дефекты могут быть поблизости)
- повышенные требования к квалификации в тест-дизайне

Вывод: используется при тестировании стабильных продуктов и относительно высоких требованиях к качеству ПО"		


                                                 Проверка	                                                       Результат	         Комментарии
 
Операции с файлами	                                                                                                 bugs	
Создание файла	                                                                                                         bugs	
Создание rtf файла размером ~1 кб на сетевой диск с названием 1.rtf в кодировке UTF-8	                                 fail                     bug #143
Создание txt файла размером ~ 1 кб локально с названием "русскиесимволы.txt" в кодировке unicode	                  ok	
Создание txt файла локально размером ~ 10 Мб	                                                                          ok	
Создание txt файла размером ~1 кб локально с названием "!@#$"	                                                          ok	
Открытие файла	                                                                                                          ok	
Сохранение документа	                                                                                                  ok	
Печать	                                                                                                                  ok	
Редактирование файлов	                                                                                                  bugs	
Отмена	                                                                                                                  ok	
Копирование	                                                                                                          ok	
Вырезание	                                                                                                          ok	
Вставка	                                                                                                                  ok	
Удаление	                                                                                                          ok	
Поиск	                                                                                                                  fail	                bug #123
Поиск с заменой	                                                                                                          fail	                bug #126
Вставка даты	                                                                                                          ok	
Форматирование	                                                                                                          ok	
Перенос строки	                                                                                                          ok	
Изменение шрифта	                                                                                                  ok	
Справка	                                                                                                                  ok	


4. Чек-лист "Статусопоказатор"															
"Этот чек-лист основан на любом из предыдущих (зависит от требуемого уровня детализации), и его дополнительная задача - показать статус продукта и динамику изменений.

Результат такого чек-листа:
+ структуризация информации, качество проверок в соответствии с уровнем детализации
+ видны изменения в динамике продукта (больше/меньше дефектов)
+ видны области с переоткрываемыми дефектами (тот же номер после ok)
+ видны области где часто появляются различные ошибки
+ возможен анализ информации о новых дефектах (почему не были найдены, когда были внесены)
- риск демотивировать заполняющего сотрудника (почему? домашняя работа :-) )

Вывод: удобно для сохранения информации и принятия управленческих решений как в тестировании, так и в разработке."	

Проверка	Результат																						
	               build 6	build 5	build 4	build 3	build 2	build 1																	
Операции с файлами	ok	ok	ok	ok	ok	ok																	
Создание файла	        ok	ok	ok	ok	ok	ok																	
Открытие файла	        ok	ok	ok	ok	ok	ok																	
Сохранение документа	ok	ok	ok	ok	ok	ok																	
Печать	                ok	ok	ok	ok	ok	ok																	
Редактирование файлов	bugs	bugs	bugs	bugs	bugs	bugs																	
Отмена	                ok	ok	ok	ok	ok	ok																	
Копирование	        ok	ok	ok	ok	ok	ok																	
Вырезание	       bug #146	bug #146 ok	ok	ok	ok	новые дефекты. Почему?																
Вставка	                ok	ok	ok	ok	ok	ok																	
Удаление	        ok	ok	ok	ok	ok	ok																	
Поиск	               bug #133	bug #133ok	bug #123bug #123bug #123	видно возникновение новых проблем, при долгосрочном использовании можно говорить что область рискованная																
Поиск с заменой	bug #126	ok	bug #126	bug #126	bug #126	bug #126	переоткрытие того же дефекта																
Вставка даты	        ok	ok	ok	ok	ok	ok																	
Форматирование	        bugs	bugs	bugs	ok	ok	ok																	
Перенос строки	       bug #129	bug #129 bug #129 ok	ok	ok	новые дефекты. Почему?																
Изменение шрифта	bug #158 ok	ok	ok	ok	ok																	
Справка	                ok	ok	ok	ok	ok	ok	




